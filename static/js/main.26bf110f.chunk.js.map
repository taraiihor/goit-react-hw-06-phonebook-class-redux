{"version":3,"sources":["components/redux/contacts/contacts-types.js","components/Contact/ContactsList.js","components/redux/contacts/contacts-actions.js","components/Form/ContactForm.js","components/Filter/Filter.js","App.js","components/redux/contacts/contact-reducer.js","components/redux/store.js","components/redux/contacts/contact-localStoredg.js","index.js"],"names":["ADD","DELETE","CHANGE_FILTER","connect","state","contacts","filter","contact","normalize","toLowerCase","trim","name","includes","dispatch","onDeleteContact","id","type","payload","map","number","className","onClick","ContactForm","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","find","item","alert","reset","onSubmit","this","placeholder","onChange","disabled","Component","dispadch","uniqueId","addContact","target","App","length","React","testContac","combineReducers","rootReducer","contactsReducer","store","createStore","serialisedState","localStorage","getItem","JSON","parse","e","console","warn","loadFromLocalStorage","composeWithDevTools","subscribe","stringify","setItem","saveToLocalStorage","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26bf110f.chunk.js","sourcesContent":["export const ADD = 'contacts/add';\r\nexport const DELETE = 'contacts/delete';\r\nexport const CHANGE_FILTER = 'contacts/changeFilter';\r\n\r\n//  default { ADD, DELETE, CHANGE_FILTER };\r\n","import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact } from '../redux/contacts/contacts-actions';\r\n\r\nimport './ContactsList.css';\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => (\r\n  <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id} className=\"item__contact\">\r\n        <p className=\"item__text\">{name}</p>\r\n        <p className=\"item__text\">{number}</p>\r\n        <button className=\"item__buttom\" onClick={() => onDeleteContact(id)}>\r\n          стерти\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { filter, contact } = state.contacts;\r\n  const normalize = filter.toLowerCase().trim();\r\n  const visibleContacts = contact.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalize),\r\n  );\r\n\r\n  return { contacts: visibleContacts };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n","import { ADD, DELETE, CHANGE_FILTER } from './contacts-types';\r\nimport { v4 as uniqueId } from 'uuid';\r\n\r\nexport const addContact = (name, number) => ({\r\n  type: ADD,\r\n  payload: {\r\n    id: uniqueId(),\r\n    name,\r\n    number,\r\n  },\r\n});\r\nexport const deleteContact = contactId => ({\r\n  type: DELETE,\r\n  payload: contactId,\r\n});\r\nexport const changeFilter = value => ({\r\n  type: CHANGE_FILTER,\r\n  payload: value,\r\n});\r\n","import React, { Component } from 'react';\r\nimport './ContactForm.css';\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../redux/contacts/contacts-actions';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { name, number } = this.state;\r\n    const { contact } = this.props;\r\n\r\n    const auditContact = contact.find(\r\n      item => item.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n    if (auditContact) {\r\n      alert(`Контакт ${name} з таким ім’ям вже є.`);\r\n      this.reset();\r\n      return;\r\n    }\r\n    this.props.onSubmit(name, number);\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className=\"item__form\" onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Ім’я\r\n          <input\r\n            className=\"item__input\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Jony Dep\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Телефон\r\n          <input\r\n            className=\"item__input\"\r\n            type=\"text\"\r\n            name=\"number\"\r\n            placeholder=\"111-11-11\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" disabled={name === '' || number === ''}>\r\n          Зберегти контакт\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ contacts: { contact } }) => ({\r\n  contact,\r\n});\r\nconst mapDispatchToProps = dispadch => ({\r\n  onSubmit: (name, number) => dispadch(addContact(name, number)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import { connect } from 'react-redux';\r\nimport { changeFilter } from '../redux/contacts/contacts-actions';\r\n\r\nimport './Filter.css';\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className=\"item__filter\">\r\n    <p className=\"item__text-filter\">Пошук контактів</p>\r\n    <input\r\n      className=\"item__element\"\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: event => dispatch(changeFilter(event.target.value)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\nimport ContactsList from './components/Contact/';\nimport ContactForm from './components/Form/';\nimport Filter from './components/Filter/';\nimport './App.css';\nimport { connect } from 'react-redux';\n\nclass App extends React.Component {\n  render() {\n    const { contact } = this.props;\n\n    return (\n      <div className=\"Containet\">\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        {!contact.length && <div>Немає жодного контакту, додайте контакт</div>}\n        <ContactsList />\n      </div>\n    );\n  }\n}\nconst mapStateToProps = ({ contacts: { contact } }) => ({\n  contact,\n});\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from 'redux';\r\nimport { ADD, DELETE, CHANGE_FILTER } from './contacts-types';\r\n\r\nconst testContac = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst contact = (state = testContac, { type, payload }) => {\r\n  switch (type) {\r\n    case ADD:\r\n      return [...state, payload];\r\n    case DELETE:\r\n      return state.filter(({ id }) => id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filter = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case CHANGE_FILTER:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  contact,\r\n  filter,\r\n});\r\n","import { combineReducers, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport contactsReducer from '../redux/contacts/contact-reducer';\r\nimport {\r\n  loadFromLocalStorage,\r\n  saveToLocalStorage,\r\n} from '../redux/contacts/contact-localStoredg';\r\n\r\nconst rootReducer = combineReducers({ contacts: contactsReducer });\r\nconst store = createStore(\r\n  rootReducer,\r\n  loadFromLocalStorage(),\r\n  composeWithDevTools(),\r\n);\r\n\r\nstore.subscribe(() => saveToLocalStorage(store.getState()));\r\n\r\nexport default store;\r\n","// перетворюємо об'єкт у рядок і зберігаємо в localStorage\r\nexport const saveToLocalStorage = state => {\r\n  try {\r\n    const serialisedState = JSON.stringify(state);\r\n    localStorage.setItem('persistantState', serialisedState);\r\n  } catch (e) {\r\n    console.warn(e);\r\n  }\r\n};\r\n\r\n// завантажуємо рядок з localStarage і перетворюємо назад в Об'єкт\r\nexport const loadFromLocalStorage = () => {\r\n  try {\r\n    const serialisedState = localStorage.getItem('persistantState');\r\n    if (serialisedState === null) return undefined;\r\n    return JSON.parse(serialisedState);\r\n  } catch (e) {\r\n    console.warn(e);\r\n    return undefined;\r\n  }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './components/redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}